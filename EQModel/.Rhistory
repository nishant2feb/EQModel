install.packages("DBI")
install.packages("ROracle")
install.packages("ICBayes")
install.packages("viridis")
library(viridis)
image(volcano, col = viridis(200))
library(viridis)
install.packages("viridisLite")
library(viridis)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("ggplot2")
install.packages("car")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(mtcars)
summary(iris)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
str(iris)
str(iris)
plot(iris$Sepal.Length, iris$Sepal.Width)
str(iris)
plot(iris$Sepal.Length, iris$Sepal.Width)
points(iris$Petal.Length, iris$Petal.Width, col = "red")
ggplot(iris, aes(x = sepal.length, y = sepal.width)) +
geom_point()
ggplot(iris, aes(x = Sepal.length, y = Sepal.width)) +
geom_point()
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_point()
p <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width))
p + geom_point()
p + geom_jitter()
str(iris.wide)
install.packages("ROracle")
install.packages("RODBC")
library(RODBC)
con = odbcConnect("GDMORCL", uid = "amr", pwd = "welcome02")
dataframe = sqlQuery(con, " select * from SCHEMA.TABLE")
con = odbcConnect("MDASDB", uid = "amr", pwd = "welcome02")
setwd("C:/Users/nsingh1/Desktop/EQModel/EQModel")
install.packages("e1071")
library(caret)
library(ggplot2)
library(dplyr)
library(lubridate)
DataEq = read.csv("oneyear.csv", stringsAsFactors = FALSE)
summary(DataEq)
DataEq = DataEq[ , -7]
class(DataEq$time)
DataEq$time = ymd_hms(as_datetime(DataEq$time))
DataEq$updated = ymd_hms(as_datetime(DataEq$updated))
DataEq$year = year(DataEq$time)
DataEq$month = month(DataEq$time)
ggplot(DataEq, aes(x = mag, y = depth, col = magType))+
geom_point(alpha = 0.6)+
facet_wrap(~ month)+
theme_light()
eqClean = DataEq[ , c(-10, -11, -14, -19, -20,-21)]
ggplot(eqClean, aes(x = latitude, y = longitude, col = mag)) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
summary(eqClean$latitude)
eqClean$latCre = eqClean$latitude + 11.7622
summary(eqClean$latCre)
ggplot(eqClean, aes(x = latCre, y = longitude, col = mag)) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
eqClean$longCre = sqrt(eqClean$longitude)
ggplot(eqClean, aes(x = latCre, y = longCre, col = mag)) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
eqClean$Constant = eqClean$latCre * eqClean$longitude
summary(eqClean$Constant)
ggplot(eqClean, aes(x = Constant, y = longitude, col = mag)) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
dataset_all = eqClean[ , c(2, 3, 4, 5, 17)]
dataset = dataset_all[ , c(1, 2)]
library(e1071)
regressor = svm(formula = latitude ~ .,
data = dataset,
type = 'eps-regression',
kernel = 'radial')
y_pred = predict(regressor, newdata = dataset)
ggplot() +
geom_point(aes(x = dataset$longitude, y = dataset$latitude),
colour = 'red') +
geom_line(aes(x = dataset$longitude, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
ggplot() +
geom_point(aes(x = dataset$longitude, y = dataset$latitude),
colour = 'red') +
geom_line(aes(x = dataset$longitude, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
lon_indx = which(dataset$longitude <= 120)
dataset_cut = dataset[lon_indx, ]
ggplot() +
geom_point(aes(x = dataset_cut$longitude, y = dataset_cut$latitude),
colour = 'red') +
geom_line(aes(x = dataset_cut$longitude, y = predict(regressor, newdata = dataset_cut)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
summary(regressor)
names(regressor)
regressor
augment(regressor)
library(purrr)
augment(regressor)
ggplot() +
geom_point(aes(x = dataset_cut$longitude, y = dataset_cut$latitude),
colour = 'red') +
geom_line(aes(x = dataset_cut$longitude, y = predict(regressor, newdata = dataset_cut)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
dataset_cut1 = dataset[-lon_indx, ]
ggplot(dataset_cut1, aes(x = latitude, y = longitude, col = mag)) +
geom_point(alpha = 0.4)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(alpha = 0.4)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(alpha = 0.4)
kmeanCluster = kmeans(dataset_cut1, centers = 5, nstart = 20)
summary(kmeanCluster)
ggplot(dataset_cut1, aes(x = latitude, y = longitude, col = kmeanCluster$cluster)) +
geom_point()
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = kmeanCluster$cluster))
plot(dataset_cut1, col = km.out$cluster, main = "k-means with 3 clusters", xlab = "", ylab = "")
plot(dataset_cut1, col = kmeanCluster$cluster, main = "k-means with 3 clusters", xlab = "", ylab = "")
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
kmeanCluster = kmeans(dataset_cut1, centers = 6, nstart = 20)
summary(kmeanCluster)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
kmeanCluster = kmeans(dataset_cut1, centers = 6, nstart = 30)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
kmeanCluster = kmeans(dataset_cut1, centers = 4, nstart = 30)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
summary(kmeanCluster)
kmeanCluster$centers
clusterCenters = kmeanCluster$centers
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))+
geom_point(clusterCenters)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))+
geom_point(clusterCenters, aes(col = black))
clusterCenters
class(clusterCenters)
clusterCenters = data.frame(kmeanCluster$centers)
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))+
geom_point(clusterCenters, aes(x =clusterCenters$latitude,
y =clusterCenters$longitude, col = "black"))
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
View(clusterCenters)
kmeanCluster = kmeans(dataset_cut1, centers = 5, nstart = 30)
summary(kmeanCluster)
clusterCenters = data.frame(kmeanCluster$centers)
View(clusterCenters)
View(dataset_cut1)
View(eqClean)
ggplot(eqClean, aes(x = latitude, y = longitude, col = factor(mag))) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
ggplot(eqClean, aes(x = latCre, y = longitude, col = factor(mag))) +
geom_point(alpha = 0.4)+
facet_wrap(~ month)+
theme_classic()
magClean = eqClean[, c(5, 17)]
View(magClean)
magClean%>%
mutate(mgIntensity = ifelse(magClean$mag < 4, "low",
ifelse(magClean$mag <= 5, "medium", "high")))
View(magClean)
magClean = magClean%>%
mutate(mgIntensity = ifelse(magClean$mag < 4, "low",
ifelse(magClean$mag <= 5, "medium", "high")))
View(magClean)
magClean = magClean%>%
mutate(mgIntensity = ifelse(magClean$mag < 4, "low",
ifelse(magClean$mag <= 5.5, "medium", "high")))
View(magClean)
View(magClean)
ggplot(magClean, aes(x = mag, y = month, col = mgIntensity))+
geom_point()
ggplot(magClean, aes(x = mag,col = mgIntensity))+
geom_density()
ggplot(magClean, aes(x = month, y = mag, col = mgIntensity))+
geom_histogram()
summ_month_mag = magClean %>%
group_by(month, mgIntensity)%>%
summarise(no = n())
View(summ_month_mag)
indx_high = which(magClean$mgIntensity == "high")
indx_high = which(magClean$mgIntensity == "high")
indx_medium = which(magClean$mgIntensity == "medium")
summary(mgClean[indx_high, ])
summary(magClean[indx_high, ])
summary(magClean[indx_medium, ])
DataEq$day = day(DataEq$time)
View(DataEq)
eqClean = DataEq[ , c(-10, -11, -14, -19, -20,-21)]
dataset_all = eqClean[ , c(2, 3, 4, 5, 17)]
dataset = dataset_all[ , c(1, 2)]
View(eqClean)
View(magClean)
View(dataset_cut1)
View(eqClean)
magClean = eqClean[, c(5, 17, 18)]
View(magClean)
magClean = magClean%>%
mutate(mgIntensity = ifelse(magClean$mag < 4, "low",
ifelse(magClean$mag <= 5.5, "medium", "high")))
summ_month_mag = magClean %>%
group_by(month, mgIntensity, day)%>%
summarise(no = n())
View(summ_month_mag)
indx_high = which(magClean$mgIntensity == "high")
indx_medium = which(magClean$mgIntensity == "medium")
summary(magClean[indx_medium, ])
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram()
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram()
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 1)
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12)
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)
ggplot(summ_month_mag, aes(x = factor(month), fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)+
scale_x_continuous()+
scale_y_continuous()
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)+
scale_x_continuous()+
scale_y_continuous()+
theme_gray()
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)+
scale_x_continuous()+
scale_y_continuous()+
theme_classic()
install.packages("PerformanceAnalytics")
ggplot() +
geom_point(aes(x = dataset$longitude, y = dataset$latitude),
colour = 'red') +
geom_line(aes(x = dataset$longitude, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
ggplot() +
geom_point(aes(x = dataset_cut$longitude, y = dataset_cut$latitude),
colour = 'red') +
geom_line(aes(x = dataset_cut$longitude, y = predict(regressor, newdata = dataset_cut)),
colour = 'blue') +
ggtitle('fitting fault line') +
xlab('longitude') +
ylab('lattitude')
ggplot(dataset_cut1, aes(x = latitude, y = longitude)) +
geom_point(aes(col = factor(kmeanCluster$cluster)))
ggplot(summ_month_mag, aes(x = month, fill = mgIntensity))+
geom_histogram(bins = 12, binwidth =  1)+
scale_x_continuous()+
scale_y_continuous()+
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
View(DataEq)
View(eqClean)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
install.packages("caret")
library(caret)
library(ggplot2)
library(dplyr)
library(lubridate)
library(PerformanceAnalytics)
#importing data
DataEq = read.csv("oneyear.csv", stringsAsFactors = FALSE)
summary(DataEq)
#removing NA columns
DataEq = DataEq[ , -7]
class(DataEq$time)
#converting time to usable format
DataEq$time = ymd_hms(as_datetime(DataEq$time))
DataEq$updated = ymd_hms(as_datetime(DataEq$updated))
DataEq$year = year(DataEq$time)
DataEq$month = month(DataEq$time)
DataEq$day = day(DataEq$time)
#pattern in width and magnitude of the earthquake
ggplot(DataEq, aes(x = mag, y = depth, col = magType))+
geom_point(alpha = 0.6)+
facet_wrap(~ month)+
theme_light()
# Removing no variance data
eqClean = DataEq[ , c(-10, -11, -14, -19, -20,-21)]
numClean = eqClean[, c(-1, -6, -10, -11)]
chart.Correlation(numClean)
